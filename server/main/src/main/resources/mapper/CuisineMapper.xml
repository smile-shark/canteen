<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smileshark.mapper.CuisineMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.smileshark.entity.Cuisine">
        <id column="cuisine_id" property="cuisineId" />
        <result column="name" property="name" />
        <result column="num" property="num" />
        <result column="price" property="price" />
        <result column="creation_method" property="creationMethod" />
        <result column="meat_vegetable" property="meatVegetable" />
        <result column="main_ingredient" property="mainIngredient" />
        <result column="ingredients" property="ingredients" />
        <result column="style_of_cooking_id" property="styleOfCookingId" />
        <result column="cuisine_component_id" property="cuisineComponentId" />
        <result column="cuisine_type_id" property="cuisineTypeId" />
        <result column="shop_id" property="shopId" />
        <result column="state" property="state" />
        <result column="is_special_offer" property="isSpecialOffer" />
        <result column="special_offer" property="specialOffer" />
        <result column="taste_id" property="tasteId" />
        <result column="min_num" property="minNum" />
        <result column="inventory" property="inventory" />
        <result column="introduce" property="introduce" />
        <result column="take_out_show" property="takeOutShow" />
        <result column="dine_in_show" property="dineInShow" />
        <result column="warning_min" property="warningMin" />
        <result column="warning_max" property="warningMax" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        cuisine_id, name, num, price, creation_method, meat_vegetable, main_ingredient, ingredients, style_of_cooking_id, cuisine_component_id, cuisine_type_id, shop_id, state, is_special_offer, special_offer, taste_id, min_num, inventory, introduce, take_out_show, dine_in_show, warning_min, warning_max
    </sql>

    <resultMap id="pageListMap" type="com.smileshark.entity.Cuisine">
        <id column="cuisine_id" property="cuisineId" />
        <result column="name" property="name" />
        <result column="num" property="num" />
        <result column="price" property="price" />
        <result column="state" property="state" />
        <result column="url" property="image" />
    </resultMap>

    <select id="pageList" resultMap="pageListMap">
        select cuisine.name,cuisine.cuisine_type_id,cuisine.price,cuisine.num,cuisine.state,min(cuisine_image.url) as url ,cuisine.cuisine_id
        from cuisine join cuisine_type on cuisine.cuisine_type_id = cuisine_type.cuisine_type_id left join
        cuisine_image on cuisine.cuisine_id = cuisine_image.cuisine_id
        <where>
            <if test="name!=null and name!=''">
                and cuisine.name like #{name}
            </if>
            <if test="cuisineType!=null and cuisineType!=''">
                and cuisine_type.cuisine_type_id = #{cuisineType}
            </if>
            <if test="state!=null">
                and cuisine.state = #{state}
            </if>
        </where>
        group by cuisine.cuisine_id
        order by cuisine.num
    </select>
    <resultMap id="cuisineServiceListMap" type="com.smileshark.entity.Cuisine">
        <id column="cuisine_id" property="cuisineId" />
        <result column="price" property="price" />
        <result column="name" property="name" />
        <result column="is_special_offer" property="isSpecialOffer" />
        <result column="special_offer" property="specialOffer" />
        <result column="url" property="image" />
        <result column="monthly_sales" property="monthlySales"/>
    </resultMap>

    <select id="cuisineServiceList" resultMap="cuisineServiceListMap">
        select cuisine.cuisine_id,price,is_special_offer,special_offer,min(cuisine_image.url) as url,
        ifnull(sum(case when daily_sales_volume.sales_date >= date_sub(curdate(),interval 1 month)
        then daily_sales_volume.num else 0 end),0) as monthly_sales,cuisine.name,cuisine.inventory
        from cuisine
        join cuisine_image on cuisine.cuisine_id = cuisine_image.cuisine_id
        left join daily_sales_volume on cuisine.cuisine_id = daily_sales_volume.cuisine_id
        <where>
            cuisine.state = 0
            <if test="shopId!=null and shopId!=''">
                and cuisine.shop_id = #{shopId}
            </if>
            <if test="name!=null and name!=''">
                and cuisine.name like #{name}
            </if>
            <if test="serviceType!=null">
                <if test="serviceType==0">
                    and dine_in_show = 0
                </if>
                <if test="serviceType==1 or serviceType==2">
                    and take_out_show = 0
                </if>
            </if>
            <if test="cuisineTypeId!=null and cuisineTypeId!=''">
                and cuisine.cuisine_type_id = #{cuisineTypeId}
            </if>
        </where>
        group by cuisine.cuisine_id
    </select>

</mapper>
